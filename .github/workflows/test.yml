name: tests

on: [push, pull_request, workflow_dispatch]

jobs:
  formatting:
    name: Check black formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Check code formatting with black
        run: |
          black -l 120 --check --diff --color qsessions tests setup.py
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.9", "3.8", "3.7"]
        django-version: ["4.1", "4.0", "3.2"]
        exclude:
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}.0
          pip install -e ".[dev]"
      - name: Run tests
        run: |
          py.test --cov --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
      - if: ${{ strategy.job-index == 0 }}
        name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - if: ${{ strategy.job-index == 0 }}
        name: Create the coverage badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.CODECOVERAGE_GIST }}
          gistID: 21974aee9ff21ae779be1549795b4e09
          filename: pytest-coverage__${{ github.ref_name }}.json
          label: coverage
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
