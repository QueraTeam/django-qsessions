name: tests

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  pre-commit:
    name: Run pre-commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # https://docs.djangoproject.com/en/dev/faq/install/#what-python-version-can-i-use-with-django
        python-version: ["3.12", "3.11", "3.10"]
        django-version: ["5.1", "5.0", "4.2"]
        include:
          - python-version: "3.13"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "4.2"
          - python-version: "3.8"
            django-version: "4.2"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}.0
          pip install -e ".[dev]"
      - name: Run tests
        run: |
          set -o pipefail
          py.test --cov --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
      - if: ${{ strategy.job-index == 0 }}
        name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - if: ${{ strategy.job-index == 0 && github.ref == 'refs/heads/main' }}
        name: Create the coverage badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.CODECOVERAGE_GIST }}
          gistID: 24a6d63ff9d29d9be5399169f8199ca0
          filename: pytest-coverage__${{ github.ref_name }}.json
          label: coverage
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
